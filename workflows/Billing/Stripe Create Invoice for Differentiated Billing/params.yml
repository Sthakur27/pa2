id: params
type: datasource
subtype: JavascriptQuery
resourceName: JavascriptQuery
template:
  ordered:
    - queryRefreshTime: ''
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - workflowRunId: null
    - showFailureToaster: true
    - query: |
        if (!!startTrigger.data) {
          console.log('Taking parameters from payload', startTrigger.data);
          return startTrigger.data;
        } else {
          console.log('Using default parameters');
          return {
            stripe_customer_id: 'cus_NmTwZTdBTevo3g',
            team_enduser_price_id: 'price_cloud_monthly_enduser_team',
            team_builder_price_id: 'price_cloud_monthly_builder_team',
            business_enduser_price_id: 'price_cloud_invoice_enduser_business',
            business_builder_price_id: 'price_cloud_invoice_builder_business',
            workflow_price_id: 'price_workflows_one_time',
            invoice_builders: 1,
            invoice_endusers: 1,
            billing_period_start: 1684144857,
            billing_period_end: 1686823257,
            prorate_business: 0.13,
            prorate_team: 0.23,
            invoice_workflows_gb_used: 2,
            currency: 'USD',
            next_billing_period_start: '2023-06-11T19:01:02.687280',
            next_billing_period_end: '2023-07-11T19:01:02.687280',
            ds: '2023-05-30',
            retool_customer_id: 'cloud_test_org',
            org_sid: 'test_org',
            deployment_id: null,
            force_create: true,
            disable_automatic_tax: true
          }  
        }
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - workflowRunBodyType: raw
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - _additionalScope: []
    - isImported: false
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - requestSentTimestamp: null
    - metadata: null
    - workflowActionType: null
    - editorMode: sql
    - queryRunTime: null
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - evalType: script
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events: []
    - queryTimeout: '120000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - workflowBlockPluginId: null
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2023-05-18T00:11:49.040Z
blockData:
  top: 48
  left: -144
  uuid: bd3699c6-f7bf-4a7d-9a4b-01b75c60d151
  pluginId: params
  blockType: code
  dimensions:
    width: 362
    height: 446
  editorType: JavascriptQuery
  resourceName: JavascriptQuery
  responseHeight: 207
  retryPanelOpen: false
  responsePanelState: open
  incomingOnSuccessEdges:
    - ff493309-c8b3-4a83-b6a5-fdb9dc723610
