id: updateInvoiceStatus
type: datasource
subtype: SqlQueryUnified
resourceName: 4465247e-0868-4261-ae6b-789273d5a26a
resourceDisplayName: retool_db
template:
  ordered:
    - queryRefreshTime: ''
    - records: ''
    - lastReceivedFromResourceAt: null
    - databasePasswordOverride: ''
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - workflowRunId: null
    - showFailureToaster: true
    - query: |-
        insert into dim_invoice_status(
          ds,
          stripe_customer_id
        )
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - workflowRunBodyType: raw
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - warningCodes: []
    - data: null
    - recordId: ''
    - importedQueryInputs:
        ordered: []
    - isImported: false
    - showSuccessToaster: true
    - dataArray: []
    - cacheKeyTtl: ''
    - filterBy: >-
        [{"key":"ds","value":"{{ ds
        }}","operation":"="},{"key":"retool_customer_id","value":"{{
        retool_customer_id }}","operation":"="}]
    - requestSentTimestamp: null
    - databaseHostOverride: ''
    - metadata: null
    - workflowActionType: null
    - editorMode: gui
    - queryRunTime: null
    - actionType: UPDATE_OR_INSERT_BY
    - changesetObject: ''
    - shouldUseLegacySql: false
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - databaseNameOverride: ''
    - confirmationMessage: null
    - isFetching: false
    - changeset: >-
        [{"key":"ds","value":"{{ ds }}"},{"key":"stripe_customer_id","value":"{{
        stripe_customer_id }}"},{"key":"retool_customer_id","value":"{{
        retool_customer_id }}"},{"key":"org_sid","value":"{{ org_sid
        }}"},{"key":"deployment_id","value":"{{ deployment_id
        }}"},{"key":"status","value":"{{ status
        }}"},{"key":"invoice_id","value":"{{ invoice_id
        }}"},{"key":"environment","value":"{{
        workflowContext.environment}}"},{"key":"updated_at","value":"{{ moment()
        }}"}]
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - enableBulkUpdates: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - evalType: script
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - bulkUpdatePrimaryKey: ''
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events: []
    - tableName: dim_invoice_status
    - queryTimeout: '120000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - workflowBlockPluginId: null
    - databaseUsernameOverride: ''
    - shouldEnableBatchQuerying: false
    - doNotThrowOnNoOp: false
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2023-05-30T21:43:00.503Z
blockData:
  top: 352
  left: 48
  uuid: 0a1844a9-b278-4e92-b6e6-e207be721407
  options:
    parameters:
      - id: f6782a1a-cc62-4cdb-95a4-eeed2f59e298
        name: ds
        exampleValue: '2023-05-29'
      - id: 46cdb036-7b3a-4172-85aa-d5d59488674e
        name: stripe_customer_id
        exampleValue: stripe_test_id
      - id: 0024f246-d663-4b61-9b55-93d1d1a69921
        name: retool_customer_id
        exampleValue: cloud_test_org
      - id: bf264347-2810-485d-9699-8129c743c1fc
        name: org_sid
        exampleValue: test_org
      - id: b0619362-8bc8-4ecf-adf1-52fe4caf10ff
        name: deployment_id
        exampleValue: ''
      - id: 3ad4f6ed-551c-4ff6-ab0c-d4f432a9b61a
        name: status
        exampleValue: pending
      - id: 85cb30e9-7438-4289-9bb5-47983b6547bf
        name: invoice_id
        exampleValue: ''
  pluginId: updateInvoiceStatus
  blockType: function
  editorType: SqlQueryUnified
  resourceName: 4465247e-0868-4261-ae6b-789273d5a26a
  responsePanelState: closed
  incomingOnSuccessEdges: []
