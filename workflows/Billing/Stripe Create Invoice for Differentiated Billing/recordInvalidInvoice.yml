id: recordInvalidInvoice
type: datasource
subtype: JavascriptQuery
resourceName: JavascriptQuery
template:
  ordered:
    - queryRefreshTime: ''
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - workflowRunId: null
    - showFailureToaster: true
    - query: >-
        await postUpdateToDatadog('failed')


        await updateInvoiceStatus(
          params.data.ds, 
          params.data.stripe_customer_id, 
          params.data.retool_customer_id,
          params.data.org_sid,
          params.data.deployment_id,
          'invalid',
          null
        )



        await postToSlack('C04FH6U88S3', `Stripe Create Invoice workflow failed
        due to invalid parameters: ${JSON.stringify(params.data)}`)
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - workflowRunBodyType: raw
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - _additionalScope: []
    - isImported: false
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - requestSentTimestamp: null
    - metadata: null
    - workflowActionType: null
    - editorMode: sql
    - queryRunTime: null
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - evalType: script
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events: []
    - queryTimeout: '10000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - workflowBlockPluginId: null
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2023-06-10T00:12:55.782Z
blockData:
  top: 512
  left: 848
  uuid: 10f42bc3-999d-45cc-8b64-e953a0639b0a
  pluginId: recordInvalidInvoice
  blockType: code
  editorType: JavascriptQuery
  resourceName: JavascriptQuery
  incomingPorts:
    - portId: e7e5c2c9-a214-4320-be64-1316f7e527c2
      blockId: 477deead-5bef-4df2-a1b8-48950d1534ba
  retryPanelOpen: false
  responsePanelState: loading
  incomingOnSuccessEdges: []
