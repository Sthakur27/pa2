id: addTypesToNullValues
type: datasource
subtype: JavascriptQuery
resourceName: JavascriptQuery
template:
  ordered:
    - queryRefreshTime: ''
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - workflowRunId: null
    - showFailureToaster: true
    - query: |-
        if (!Array.isArray(readRecentlyUpdatedRows.data)) {
          return [];
        }

        return readRecentlyUpdatedRows.data.map((row) => {
          if (!row.deployment_id) {
            row.deployment_id = {RT$BQ_TYPE: 'BIGNUMERIC', value: null}
          } else {
            // for whatever reason, RetoolDB query returns deployment_id as string, not integer
            row.deployment_id = parseInt(row.deployment_id)
          }
          if (!row.org_sid) {
            row.org_sid = {RT$BQ_TYPE: 'STRING', value: null}
          }
          if (!row.invoice_id) {
            row.invoice_id = {RT$BQ_TYPE: 'STRING', value: null}
          }
          return row
        })
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - workflowRunBodyType: raw
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - _additionalScope: []
    - isImported: false
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - requestSentTimestamp: null
    - metadata: null
    - workflowActionType: null
    - queryRunTime: null
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - evalType: script
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events: []
    - queryTimeout: '120000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - workflowBlockPluginId: null
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2023-06-12T20:02:08.253Z
blockData:
  top: 32
  left: 1152
  uuid: 64925771-c155-4f31-adc5-c3febdd08ec5
  pluginId: addTypesToNullValues
  blockType: default
  editorType: JavascriptQuery
  resourceName: JavascriptQuery
  retryPanelOpen: false
  responsePanelState: open
  incomingOnSuccessEdges:
    - b0637fc0-267d-4e01-83ab-f6e521637744
